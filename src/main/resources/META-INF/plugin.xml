<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <id>com.pawrequest.redscript</id>
    <name>Redscript</name>
    <vendor>pawrequest</vendor>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.redhat.devtools.lsp4ij</depends>
    <depends>org.jetbrains.plugins.textmate</depends>
    <depends>com.intellij.modules.lang</depends>


    <extensions defaultExtensionNs="com.intellij">
<!--        <runConfigurationType implementation="com.pawrequest.redscript.debug.RedscriptAttachConfigurationType"/>-->
        <postStartupActivity implementation="com.pawrequest.redscript.server.RedscriptInitializer"/>
        <notificationGroup
                id="Redscript Notifications"
                displayType="BALLOON"
        />
<!--                canHandleContent="true"-->
        <!--        settings        -->
        <projectConfigurable parentId="tools"
                             id="redscript.config"
                             displayName="Redscript"
                             nonDefaultProject="true"
                             instance="com.pawrequest.redscript.settings.RedscriptConfigurable"
        />


        <applicationService serviceImplementation="com.pawrequest.redscript.settings.RedscriptSettings"/>

        <!--        language     -->
        <textmate.bundleProvider implementation="com.pawrequest.redscript.lang.RedscriptTextMateBundleProvider"/>
        <fileType
                name="Redscript"
                language="Redscript"
                implementationClass="com.pawrequest.redscript.lang.RedscriptFileType"
                fieldName="INSTANCE"
                extensions="reds"
        />

        <!--        "required" to fix textmate highlighting after defining custom filetype, but highlighting seems to work without and issue #10 unaffected? -->
        <!--        <editorHighlighterProvider-->
        <!--                filetype="Redscript"-->
        <!--                implementationClass="org.jetbrains.plugins.textmate.language.syntax.highlighting.TextMateEditorHighlighterProvider" />-->
        <!--        <lang.syntaxHighlighterFactory-->
        <!--                language="Redscript"-->
        <!--                implementationClass="org.jetbrains.plugins.textmate.language.syntax.highlighting.TextMateSyntaxHighlighterFactory" />-->

        <!-- added as per clojure https://github.com/clojure-lsp/clojure-lsp-intellij/blob/321172035f922f7210e0eb2e2841eefdd3874310/src/main/resources/META-INF/plugin.xml#L59
                do nothing? or...? -->
        <!--        folding builder doesnt magically make foldable? -->
        <lang.foldingBuilder language="Redscript"
                             implementationClass="com.redhat.devtools.lsp4ij.features.foldingRange.LSPFoldingRangeBuilder"
                             order="first"/>
        <codeInsight.parameterInfo
                language="Redscript"
                implementationClass="com.redhat.devtools.lsp4ij.features.signatureHelp.LSPParameterInfoHandler"/>

        <!--         PSI doesnt make tree loadable/viewable in psi pane -->
        <!--        <lang.psiStructureViewFactory-->
        <!--                id="LSPDocumentSymbolStructureViewFactoryForTextMate"-->
        <!--                language="textmate"-->
        <!--                implementationClass="com.redhat.devtools.lsp4ij.features.documentSymbol.LSPDocumentSymbolStructureViewFactory"/>-->
        <lang.psiStructureViewFactory
                id="LSPDocumentSymbolStructureViewFactoryForRedscript"
                language="Redscript"
                order="first"
                implementationClass="com.redhat.devtools.lsp4ij.features.documentSymbol.LSPDocumentSymbolStructureViewFactory"/>
        <!--            -->

        <!--        ? -->
        <!--        <callHierarchyProvider-->
        <!--                language="Redscript"-->
        <!--                implementationClass="com.redhat.devtools.lsp4ij.features.callHierarchy.LSPCallHierarchyProvider" />-->
        <!--        <codeBlockProvider-->
        <!--                language="Redscript"-->
        <!--                implementationClass="com.redhat.devtools.lsp4ij.features.codeBlockProvider.LSPCodeBlockProvider"-->
        <!--                order="first"/>-->
        <!-- end of clojure code -->
    </extensions>


    <extensions defaultExtensionNs="com.redhat.devtools.lsp4ij">
        <debugAdapterServer
                id="typescript"
                factoryClass="my.dap.server.TypeScriptDebugAdapterDescriptorFactory" />
<!--                name="TypeScript"-->
    </extensions>

    <!--    lsp     -->
    <extensions defaultExtensionNs="com.redhat.devtools.lsp4ij">
<!--        <debugAdapterServer-->
<!--                id="typescript"-->
<!--                name="TypeScript"-->
<!--                factoryClass="my.dap.server.TypeScriptDebugAdapterDescriptorFactory" />-->
<!--        <debugAdapterServer-->
<!--                id="Redscript"-->
<!--                name="Redscript DAP Server"-->
<!--                factoryClass="com.pawrequest.redscript.debug.RedscriptDebugDescriptorFactory"/>-->

        <server id="redscript.server"
                name="RedscriptLanguageServer"
                factoryClass="com.pawrequest.redscript.server.RedscriptLanguageServerFactory">
            <description><![CDATA[
        RedScript4IJ language server
        ]]>
            </description>
        </server>
        <!-- why is this required? icon etc works as 'language' but lsp needs pattern match to fire... not so in reference plugins -->
        <fileNamePatternMapping patterns="*.reds"
                                serverId="redscript.server"
                                languageId="Redscript"/>

        <languageMapping language="Redscript"
                         languageId="Redscript"
                         serverId="redscript.server"
        />

    </extensions>


<!--    <applicationListeners>-->
<!--        <listener class="com.pawrequest.redscript.settings.RedscriptProjectManagerListener"-->
<!--                  topic="com.intellij.openapi.project.ProjectManagerListener"/>-->
<!--    </applicationListeners>-->

</idea-plugin>
